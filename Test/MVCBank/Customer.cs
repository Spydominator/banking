//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCBank
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.ComponentModel.DataAnnotations;

    public partial class Customer
    {
        public int cust_id { get; set; }
        [Required(ErrorMessage = "Name is required")]
        [RegularExpression("^[a-zA-Z\\s]{1,20}$", ErrorMessage = "Numbers and symbols are not allowed")]
        [StringLength(30, ErrorMessage = "Name cannot be longer than 30 characters", MinimumLength = 4)]
        public string cust_name { get; set; }
        [Required(ErrorMessage = "The date field cannot be empty")]
        [DataType(DataType.Date)]
        public System.DateTime Dob { get; set; }

        [Required(ErrorMessage = "The phone number field cannot be empty")]
        [DataType(DataType.PhoneNumber)]
        [RegularExpression(@"^([0-9]{10})$", ErrorMessage = "Incorrect phone format ")]
        public string contact_no { get; set; }
        [Required(ErrorMessage = "The address field cannot be empty")]
        public string cust_add { get; set; }
        public string a_c_no { get; set; }
        [Required(ErrorMessage = "The account type field cannot be empty")]
        public string a_c_type { get; set; }
        public Nullable<decimal> Bal { get; set; }

        [StringLength(16, ErrorMessage = "Card has a fixed width of 16 numbers", MinimumLength = 16)]
        public string card_no { get; set; }

        [StringLength(4, ErrorMessage = "The PIN has a fixed width of 4 numbers", MinimumLength = 4)]
        public string card_pin { get; set; }
        public int b_branch_id { get; set; }

        public virtual Bank Bank { get; set; }
    }
}
